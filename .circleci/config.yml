version: 2.1

orbs:
  #slack: circleci/slack@4.1.4
  #aws-cli: circleci/aws-cli@1.3.0

jobs:
  Spinup-Test-Python:
    docker:
      - image: circleci/python:3.9.7-buster
    steps:
      - checkout
      - run:
          name: Install cryptocmd application
          working_directory: ~/
          command: pip install cryptocmd && pip install pandas && pip install pylint
      - run:
          name: Lint the code
          working_directory: ~/project/scripts/
          command: |
            pylint cryptotest.py
            pylint --help
            python3 -V
      - run:
          name: Get files from scripts folder
          working_directory: ~/project/scripts/
          command: |
            sudo chmod 755 cryptotest.py
            python3 cryptotest.py
  AWS-cloudformation-infra:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install dependancies
          command: yum install -y tar gzip
      - run:
          name: Ensure cloud backend exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              --tags project="netbox-${CIRCLE_WORKFLOW_ID:0:7}" \
              --stack-name "netbox-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"
      - run:
          name: Add to ansible inventory
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --output text >> .circleci/inventory.txt
              cat .circleci/inventory.txt

      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/inventory.txt

  #Linting:
  NetboxSetup:
    docker:
      - image: circleci/python:3.9.7-buster
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run:
          name: Install Dependancies
          working_directory: ~/project/.circleci/
          become: True
          command: |
            pip3 install ansible
            pip3 --version
            ansible --version
            # apt install docker
            ls -la
            # cat inventory.txt
      - run:
          name: Run ansible-galaxy to setup netbox
          working_directory: ~/project/.circleci/
          become: True
          command: |
            #ansible-galaxy install lae.netbox
            ansible-galaxy install geerlingguy.postgresql davidwittman.redis lae.netbox
            ls -la ~/.ansible
            ls -la ~/.ansible/roles/lae.netbox/examples/
            cat ~/.ansible/roles/lae.netbox/examples/playbook_single_host_deploy.yml

      - persist_to_workspace:
          root: ~/
          paths:
            - .ansible/roles/lae.netbox/examples/playbook_single_host_deploy.yml
            
      - run:
          name: Ansible playbook
          working_directory: ~/project/.circleci/
          command: |
            ansible-playbook -i inventory.txt ~/.ansible/roles/lae.netbox/examples/playbook_single_host_deploy.yml -K
            

          
  Smoke-Test-application:
    docker:
      - image: circleci/python:3.9.7-buster
    steps:
      - checkout
      - run:
          name: install dependancies
          working_directory: ~/
          command: pip install cryptocmd pandas
      - run:
          name: test script
          working_directory: ~/scripts
          command: |
            python3 cryptotest.py

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
    Spinup-Test-Python:
      jobs:
        #- Spinup-Test-Python
       # - AWS-cloudformation-infra
        - NetboxSetup
        #-  Linting:
        #    requires: [AWS-cloudformation-infra]
        #-  Smoke-Test-application:
        #    requires: [Linting]